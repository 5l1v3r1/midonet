//
// Copyright 2015 Midokura SARL
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

import "commons.proto";

package org.midonet.cluster.flowtracing;
option java_package = "org.midonet.cluster.flowtracing";
option java_outer_classname = "FlowTracing";

message Request {
    optional int64 txnid = 1;
    optional FlowCountRequest flowCountRequest = 2;
    optional FlowTracesRequest flowTracesRequest = 3;
    optional FlowTraceDataRequest flowTraceDataRequest = 4;
}

message FlowCountRequest {
    optional org.midonet.cluster.models.UUID traceRequestId = 1;
    optional int64 maxTimestamp = 2;
    optional int32 limit = 3;
}

message FlowTracesRequest {
    optional org.midonet.cluster.models.UUID traceRequestId = 1;
    optional int64 maxTimestamp = 2;
    optional int32 limit = 3;
}

message FlowTraceDataRequest {
    optional org.midonet.cluster.models.UUID traceRequestId = 1;
    optional org.midonet.cluster.models.UUID flowTraceId = 2;
    optional int64 maxTimestamp = 3;
    optional int32 limit = 4;
}

message Response {
    optional int64 txnid = 1;
    optional ErrorResponse error = 2;
    optional FlowCountResponse flowCountResponse = 3;
    optional FlowTracesResponse flowTracesResponse = 4;
    optional FlowTraceDataResponse flowTraceDataResponse = 5;
}

enum ErrorCode {
    INVALID_ARGUMENT = 1;
    TRACE_NOT_FOUND = 2;
    INTERNAL_ERROR = 3;
}

message ErrorResponse {
    optional ErrorCode code = 1;
}

message FlowCountResponse {
    optional int64 count = 1;
}

message FlowTracesResponse {
    repeated FlowTrace trace = 1;
}

message FlowTraceDataResponse {
    optional FlowTrace trace = 1;
    repeated FlowTraceData traceData = 2;
}

message FlowTrace {
    optional org.midonet.cluster.models.UUID id = 1;
    optional int64 timestamp = 2;
    optional bytes ethSrc = 3;
    optional bytes ethDst = 4;
    optional org.midonet.cluster.models.EtherType etherType = 5;
    optional org.midonet.cluster.models.IPAddress networkSrc = 6;
    optional org.midonet.cluster.models.IPAddress networkDst = 7;
    optional org.midonet.cluster.models.Protocol networkProto = 8;
    optional int32 srcPort = 9;
    optional int32 dstPort = 10;
}

message FlowTraceData {
    optional int64 timestamp = 1;
    optional org.midonet.cluster.models.UUID host = 2;
    optional string data = 3;
}