<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.midonet</groupId>
        <artifactId>midonet</artifactId>
        <version>1.3.0-SNAPSHOT</version>
    </parent>

    <artifactId>midolman</artifactId>
    <name>Midolman Java daemon</name>
    <packaging>jar</packaging>

    <properties>
        <!-- once old simulation unit tests are phased out,
             this should be the default value
        <groups.simulation>org.midonet.midolman.SimulationTests</groups.simulation>
        -->
        <!-- (does nothing, but needs to point to existing class) -->
        <groups.simulation>org.midonet.midolman.Midolman</groups.simulation>
    </properties>

    <build>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludedGroups>${groups.simulation}</excludedGroups>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <configuration>
                    <requires>
                        <require>java7</require>
                        <require>quagga &gt;= 0.99.21</require>
                        <require>bridge-utils</require>
                    </requires>
                    <mappings>
                        <mapping>
                            <directory>/usr/share/midolman</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/${project.build.finalName}.jar</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/init.d</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <configuration>true</configuration>
                            <filemode>755</filemode>
                            <sources>
                                <source>
                                    <location>src/rhel6/init.d/midolman</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/init</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>src/deb/init/midolman.conf</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/midolman</directory>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>conf</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/share/midolman/dep</directory>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/dep</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/quagga</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <sources>
                                <source>
                                    <location>src/deb/quagga/bgpd.conf</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/bin</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>755</filemode>
                            <sources>
                                <source>
                                    <location>src/deb/bin/mm-dpctl</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/bin</directory>
                            <directoryIncluded>false</directoryIncluded>
                            <filemode>755</filemode>
                            <sources>
                                <source>
                                    <location>src/deb/bin/mm-ctl</location>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                    <preinstallScriptlet>
                        <scriptFile>${project.basedir}/src/deb/control/preinst</scriptFile>
                    </preinstallScriptlet>
                    <postinstallScriptlet>
                        <scriptFile>${project.basedir}/src/rhel6/control/postinst</scriptFile>
                    </postinstallScriptlet>
                    <preremoveScriptlet>
                        <scriptFile>${project.basedir}/src/deb/control/prerm</scriptFile>
                    </preremoveScriptlet>
                    <postremoveScriptlet>
                        <scriptFile>${project.basedir}/src/deb/control/postrm</scriptFile>
                    </postremoveScriptlet>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.vafer</groupId>
                <artifactId>jdeb</artifactId>
                <configuration>
                    <deb>[[buildDir]]/midolman_[[version]].[[extension]]</deb>
                    <dataSet>
                        <data>
                            <src>${project.build.directory}/${project.build.finalName}.jar</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/share/midolman</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/init/midolman.conf</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/etc/init</prefix>
                                <filemode>644</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/conf</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/etc/midolman</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.build.directory}/dep</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/share/midolman/dep</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/quagga/bgpd.conf</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/etc/quagga</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/bin/mm-dpctl</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/bin</prefix>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/src/deb/bin/mm-ctl</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/bin</prefix>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.basedir}/CHANGE-LOG.txt</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/usr/share/doc/midolman/</prefix>
                                <filemode>644</filemode>
                            </mapper>
                        </data>
                    </dataSet>
                </configuration>
            </plugin>

            <plugin>
                <!-- copy midolman runtime jar deps for final packages -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>copy-midokura-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals><goal>copy-dependencies</goal></goals>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>
                                ${project.build.directory}/dep/
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--  this can be used to generate a jar file including all external
                    dependencies with it. Should we package midolman that way ?
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals><goal>single</goal></goals>
                    </execution>
                </executions>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
            -->

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <executable>sudo</executable>
                    <arguments>
                        <argument>java</argument>
                        <argument>${javalib}</argument>
                        <argument>${bootstrap}</argument>
                        <argument>-cp</argument>
                        <classpath />
                        <argument>org.midonet.midolman.Midolman</argument>
                    </arguments>
                </configuration>
            </plugin>

            <plugin>
                <!-- this plugin creates a resource file gathering info from the
                last commit info which is then logged at midolman startup and
                helps to identify which midolman code is running. Resource
                filtering needs some custom configuration to include this file
                in the packaging (see below). -->
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.1.5</version>
                <executions>
                    <execution><goals><goal>revision</goal></goals></execution>
                </executions>
                <configuration>
                    <verbose>false</verbose>
                    <dateFormat>yyyy-MM-dd '@' HH:mm:ss z</dateFormat>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>
                        src/main/resources/git.properties
                    </generateGitPropertiesFilename>
                </configuration>
            </plugin>

        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>  <!-- for git -->
                    <include>**/*.xml</include>         <!-- for logger conf -->
                    <include>**/*.conf</include>        <!-- for mm conf -->
                </includes>
            </resource>
        </resources>

    </build>

    <dependencies>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>packets</artifactId>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>midonet-util</artifactId>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>netlink</artifactId>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>odp</artifactId>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>midonet-jdk-bootstrap</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.9.2</artifactId>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor</artifactId>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-slf4j</artifactId>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-testkit</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
        </dependency>

        <dependency> <!-- needed by midonet-util & netlink -->
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.zookeeper</groupId>
            <artifactId>zookeeper</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.cassandra</groupId>
            <artifactId>cassandra-all</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.cassandra</groupId>
            <artifactId>cassandra-thrift</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.thrift</groupId>
            <artifactId>libthrift</artifactId>
        </dependency>

        <dependency>
            <groupId>me.prettyprint</groupId>
            <artifactId>hector-core</artifactId>
        </dependency>

        <dependency> <!-- needed at compile time via netlink dependency -->
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
        </dependency>

        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>2.1.2</version>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>3.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>

    </dependencies>

    <profiles>

        <profile>
            <!-- activate this profile to generate rpm package for the midolman.
            On ubuntu this requieres the rpm tools. -->
            <id>rpm</id>
            <activation>
                <property><name>rpm</name></property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals><goal>rpm</goal></goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- activate to run functional tests on simulation with actors -->
            <id>withSim</id>
            <properties>
                <!-- overriding value needs to point to an existing class -->
                <groups.simulation>org.midonet.midolman.Midolman</groups.simulation>
            </properties>
        </profile>

        <profile>
            <!-- activate to skip functional tests on simulation with actors.
                 to remove once old simulation unit tests are phased out -->
            <id>withoutSim</id>
            <properties>
                <groups.simulation>org.midonet.midolman.SimulationTests</groups.simulation>
            </properties>
        </profile>

    </profiles>

</project>
